---
- name: using git module
  hosts: ubuntu
  gather_facts: no
  become: yes
  
  vars_files:
    - secrets.yml
  vars:
    - dir: /app/pg-promise

  handlers:
    - name: Restart postgresql
      service:
        name: postgresql
        state: restarted

    - name: Restart environment
      shell: ". /etc/pg-promise.conf"

  tasks:
    - name: Install dependencies to run the project
      apt:
        name: 
          - wget
          - postgresql
          - git
        state: present
        update_cache: yes
      register: dp_results
      tags:
        - install

    - name: show the dependencies result
      debug: var=dp_results.stdout

    - name: get nvm to install node
      get_url: 
        url: "https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh"
        dest: "~/install.sh"
    
    - name: Install nvm
      shell: "sh ~/install.sh"

    - name: source profile and install 
      shell: ". ~/.profile; nvm install 17.4.0"
      tags:
        - node
    
    - name: Finding postgresql conf file
      find:
        paths: /etc/postgresql
        patterns: pg_hba.conf
        recurse: yes
      register: pg_hba
      tags:
      - psql

    - name: show content of pg_hba
      debug: var=pg_hba.files[0].path
      tags:
      - psql
        
    - name: Replace peer to be trust in postgresql conf
      lineinfile:
        path: "{{ pg_hba.files[0].path }}"
        regex: '^local   all             postgres                                peer'
        line: "local   all             postgres                                trust"
        state: present 
      notify:
        - Restart postgresql
      tags:
      - psql

    - name: clone repo 
      git:
        repo: "https://{{ gituser }}:{{ gitpass }}@github.com/fabiokleis/pg-promise"
        dest: "{{ dir }}"

    - name: Install npm modules
      shell: ". ~/.profile; npm install"
      args:
        chdir: "{{ dir }}"
      register: npm_results
      tags:
        - npm_install
    
    - name: show npm result
      debug: var=npm_results.stdout
      tags:
        - npm

    - name: Sending environment variables
      template:
        src: env.j2
        dest: "/etc/pg-promise.conf"
        owner: root
        group: root
        mode: u=rw,g=r,o=r
      notify:
        - Restart environment
      tags:
        - config

    - name: Create database
      shell: "npm run createdb"
      args:
        chdir: "{{ dir }}"

    - name: Start app
      shell: "npm start"
      args: 
        chdir: "{{ dir }}" 
      tags:
        - start

